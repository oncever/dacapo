benchmark bloat
  class dacapo.bloat.Harness;
/*
 * Standard output has the temp directory name in it, so we can't use 
 * its digest to validate.
 */
size small args "-f","bloat.TraceMethods","compiledcode"
  output "$stderr" digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709;

/* Output and error should be empty */
size default args "-f","-closure",
                  "-only","EDU/purdue/cs/bloat/trans",
		  "bloat.TraceMethods",
		  "compiledcode"
  output "$stdout" digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709,
         "$stderr" digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709;

size large args "-f","-closure",
                "-only","EDU/purdue/cs/bloat/tree",
		"bloat.TraceMethods",
                "compiledcode"
  output "$stdout" digest 0x0,
         "$stderr" digest 0x0;

size huge args "-f","-closure",
               "-only","EDU",
	       "bloat.TraceMethods",
	       "compiledcode"
  output "$stdout" digest 0x0,
         "$stderr" digest 0x0;

description
  short	"A Bytecode-level optimization and analysis tool for Java",
  long	"BLOAT analyzes a series of class files",
  copyright	"Copyright (c) 1997-2001 Purdue Research Foundation of Purdue University",
  url    	"http://www.cs.purdue.edu/s3/projects/bloat/",
  version	"1.0";
