<project name="DacapoPmd" default="all" basedir="..">
    <description>Dacapo pmd benchmark</description>
    
	<property file="ant/dacapo.properties"/>
	
	<property name="bm.name" value="pmd"/>
    <property name="pmd.version" value="3.7"/>
    <property name="pmd.url" value="${sourceforge.dl.url}/pmd"/>

    <!-- Download and build -->
    <target name="all" description="download and build the benchmark">
      <antcall target="source"/>
      <antcall target="build"/>
    </target>
    
    <!-- Download the source -->
    <target name="source" description="download the benchmark">
        <get src="${pmd.url}/pmd-src-${pmd.version}.zip"
         dest="${sources}/pmd-src-${pmd.version}.zip"
       usetimestamp="true"/>
    </target>

	<!-- Build the benchmark and harness -->
    <target name="build" depends="benchmark,harness" description="build the benchmark"/>
	
    <!-- Build the benchmark harness -->
    <target name="harness">
        <javac srcdir="${bmsrc}" source="1.5" classpath="${build}" destdir="${build}" 
            includes="dacapo/pmd/*"
            debug="true" debuglevel="lines,vars,source"/>
    </target>

    <!-- Build the benchmark -->
    <target name="benchmark">
    	<!-- Dependencies on external libraries -->
		<ant antfile="${ant.dir}/junit.xml" target="build"/>
		<ant antfile="${ant.dir}/xerces.xml" target="build"/>
    	
        <mkdir dir="${build.src}/pmd"/>
        <property name="pmd-top" value="${build.src}/pmd/pmd-${pmd.version}"/>

        <!-- Expand the pmd distribution zipfile -->
        <unzip src="${sources}/pmd-src-${pmd.version}.zip" dest="${build.src}/pmd"/>

        <!-- Apply the dacapo patch -->
        <patch patchfile="${patches}/pmd.patch" dir="${build.src}" strip="0"/>

    	<echo message="Junit JAR = ${junit.jar}"/>
        <!-- Build using Ant, setting the classpath appropriately -->
        <exec dir="${pmd-top}/bin" executable="ant">
            <arg value="jar"/>
            <env key="CLASSPATH" value=".:${junit.jar}"/>
            <env key="ANT_HOME" value="${ant.install}"/>
        </exec>

        <!-- Copy the classfiles to the dist directory -->
        <copy file="${pmd-top}/lib/pmd-${pmd.version}.jar" todir="${jars}"/>
        <antcall target="libs"/>
        <antcall target="deps"/>

        <!-- Construct the test data -->
        <property name="pmd-data" value="${pmd-top}/data/pmd"/>
        <mkdir dir="${pmd-data}"/>
        <copy todir="${pmd-data}">
            <fileset dir="${pmd-top}/src">
                <include name="net/**/*.java"/>
            </fileset>
        </copy>
        <copy todir="${pmd-data}">
            <fileset dir="${pmd-top}">
                <include name="rulesets/**/*"/>
            </fileset>
        </copy>
        <copy todir="${pmd-data}" >
            <fileset dir="${data}/pmd">
                <include name="*.lst"/>
            </fileset>
        </copy>

        <!-- Install the test data -->
        <zip basedir="${pmd-top}/data" includes="pmd/**" destfile="${zipdata}/pmd.zip"/>
        <delete dir="${pmd-top}/data"/>
    </target>
    <target name="libs" unless="externalize.deps" description="--> add the chart libraries to the build">
        <copy file="${pmd-top}/lib/jaxen-1.1-beta-7.jar" todir="${build}"/>
    </target>
    <!-- Add external libraries to the deps -->
    <target name="deps" if="externalize.deps" description="--> add the chart libraries to the build">
        <copy file="${pmd-top}/lib/xmlParserAPIs-2.6.2.jar" todir="${build.deps}"/>
        <copy file="${pmd-top}/lib/jakarta-oro-2.0.8.jar" todir="${build.deps}"/>
        <copy file="${pmd-top}/lib/jaxen-1.1-beta-7.jar" todir="${build.deps}"/>
        <copy file="${pmd-top}/lib/xercesImpl-2.6.2.jar" todir="${build.deps}"/>
        <copy file="${build.src}/junit/junit${junit.version}/junit.jar" todir="${build.deps}"/>
        <copy file="${build.src}/ant/ant.jar" todir="${build.deps}"/>
        <copy file="${build.src}/ant/ant-launcher.jar" todir="${build.deps}"/>
    </target>
</project>
