<project name="DacapoJython" default="all" basedir="..">
    <description>Dacapo jython benchmark</description>
    
	<property file="ant/dacapo.properties"/>
	
	<property name="bm-name" value="jython"/>
    <property name="bm-version" value="2.2.1"/>
    <property name="bm-_version" value="2_2.1"/>
    <property name="bm-url" value="${sourceforge.dl.url}/jython"/>
	<property name="bm-src" value="${bm-name}_installer-${bm-version}.jar"/>
	<property name="bm-top" value="${build.src}/${bm-name}"/>
	<property name="bm-files" value="${basedir}/${bm-name}"/>
	<property name="py-version" value="2.5"/>
    <property name="py-url" value="http://www.python.org/ftp/python/${py-version}/"/>
	<property name="py-src" value="Python-${py-version}.tgz"/>

    <!-- Download and build -->
    <target name="all" description="download and build the benchmark">
      <antcall target="source"/>
      <antcall target="build"/>
    </target>
    
	<!-- Download the source -->
	<target name="source" description="download the benchmark">
		<get src="${bm-url}/${bm-src}" dest="${sources}/${bm-src}" usetimestamp="true"/>
		<get src="${py-url}/${py-src}" dest="${sources}/${py-src}" usetimestamp="true"/>
	</target>

	<!-- Build the benchmark and harness -->
    <target name="build" depends="benchmark,harness" description="build the benchmark"/>
	
    <!-- Build the benchmark harness -->
    <target name="harness">
        <copy file="${bm-files}/${bm-name}.cnf" todir="${build}/cnf"/>
        <javac srcdir="${bmsrc}" classpath="${build}" destdir="${build}" 
            source="1.5"
            includes="dacapo/${bm-name}/*"
            debug="true" debuglevel="lines,vars,source"/>
    </target>

    <!-- Build the benchmark -->
    <target name="benchmark">
    	<property name="jython-top" value="${bm-top}/jython_${bm-_version}"/>
        <mkdir dir="${jython-top}"/>

        <unzip src="${sources}/${bm-src}" dest="${jython-top}"/>

        <!-- Apply the dacapo patch, which allows us to set the arguments -->
        <patch patchfile="${patches}/${bm-name}.patch" 
                 dir="${jython-top}/src/java"
                 strip="0" ignorewhitespace="yes"/>

        <!-- copy requisite files into place-->
        <copy todir="${jython-top}/src/java">
            <fileset file="${jython-top}/build.*"/>
        </copy>

        <!-- Build jython -->
        <ant antfile="build.xml" dir="${jython-top}/src/java" inheritall="false">
            <property name="javaccHome2" location="${javacchome}"/>
            <property name="python.lib" location="${jython-top}/Lib"/>
        </ant>

        <!-- Copy files to the distribution directory -->
        <copy file="${jython-top}/src/java/dist/jython.jar" todir="${jars}"/>
        <antcall target="deps"/>

        <!-- Extract the pybench benchmark from the python sources -->
        <untar src="${sources}/${py-src}" dest="${bm-top}" compression="gzip">
            <patternset>
                <include name="Python-${py-version}/Tools/pybench/**"/>
            </patternset>
        </untar>
        <move file="${bm-top}/Python-${py-version}/Tools/pybench" todir="${bm-top}/jython"/>


        <!-- patch the pybench benchmark to allow it to work with jython -->
        <patch patchfile="${patches}/pybench.patch" 
                 dir="${bm-top}/jython"
                 strip="0" ignorewhitespace="yes"/>
        <copy todir="${bm-top}/jython/Lib">
            <fileset dir="${jython-top}/Lib"/>
        </copy>


        <!-- Install the test data -->
        <zip destfile="${zipdata}/jython.zip">
            <fileset dir="${data}/" includes="jython/noop.py"/>
            <fileset dir="${data}/" includes="jython/sieve.py"/>
            <fileset dir="${bm-top}/" includes="jython/pybench/**"/>
            <fileset dir="${bm-top}/" includes="jython/Lib/**"/>
        </zip>
    </target>
	
	<!-- external dependencies -->
	<target name="deps">
    	<copy file="${build.src}/ant/ant.jar" todir="${build.deps}"/>
    	<copy file="${build.src}/ant/ant-launcher.jar" todir="${build.deps}"/>
	</target>

</project>
