<project name="daytrader" default="all" basedir="../..">
    <description>daytrader application, required by tradebeans and tradesoap</description>

    <property environment="env"/>

    <property file="ant/dacapo.properties"/>
    
    <property name="lib-name" value="daytrader"/>

    <property name="apache-svn-url" value="http://svn.apache.org/repos/asf"/>
    <property name="java-dev-url" value="https://maven-repository.dev.java.net/repository"/>

    <property name="lib-svn-url" value="${apache-svn-url}/geronimo/daytrader/trunk"/>
    <property name="lib-svn-revision" value="767347"/>
    <property name="lib-version" value="svn-${lib-svn-revision}"/>
    <property name="lib-src" value="daytrader-${lib-version}-src.tar.gz"/>

    <property name="ger-version" value="2.1.4"/>
    <property name="ger-name" value="geronimo-jetty6-minimal"/>
    <property name="ger-url" value="${apache.dl.url}/geronimo/${ger-version}"/>
    <property name="ger-bin" value="${ger-name}-${ger-version}-bin.tar.gz"/>

    <property name="ger-plugins-url" value="${apache-svn-url}/geronimo/server/tags/${ger-version}/plugins"/>
    <property name="ger-plugins-revision" value="794961"/>
    <property name="ger-plugins-bin" value="${ger-name}-${ger-version}-plugins.tar.gz"/>

    <property name="ger-svn-repo-url" value="${apache-svn-url}/geronimo/server/tags/${ger-version}/repository"/>

    <property name="amq-version" value="4.1.2-G20090207"/>
    <property name="amq-name" value="activemq-core"/>
    <property name="amq-url" value="${ger-svn-repo-url}/org/apache/activemq/activemq-core/4.1.2-G20090207/"/>
    <property name="amq-jar" value="${amq-name}-${amq-version}.jar"/>
    
    <property name="tomcat-version" value="6.0.18-G678601"/>
    <property name="tomcat-name" value="tomcat"/>
    <property name="tomcat-version-name" value="catalina"/>
    <property name="tomcat-url" value="${ger-svn-repo-url}/org/apache/${tomcat-name}/${tomcat-version-name}/${tomcat-version}/"/>
    <property name="tomcat-jar" value="${tomcat-version-name}-${tomcat-version}.jar"/>
    
    <property name="jasper-version" value="6.0.18-G678601"/>
    <property name="jasper-name" value="jasper"/>
    <property name="jasper-url" value="${ger-svn-repo-url}/org/apache/tomcat/${jasper-name}/${jasper-version}/"/>
    <property name="jasper-jar" value="${jasper-name}-${jasper-version}.jar"/>
    
    <property name="jasper-el-version" value="6.0.18-G678601"/>
    <property name="jasper-el-name" value="jasper-el"/>
    <property name="jasper-el-url" value="${ger-svn-repo-url}/org/apache/tomcat/${jasper-el-name}/${jasper-el-version}/"/>
    <property name="jasper-el-jar" value="${jasper-el-name}-${jasper-el-version}.jar"/>
    
    <property name="jstl-version" value="1.2"/>
    <property name="jstl-name" value="jstl"/>
    <property name="jstl-url" value="${java-dev-url}/${jstl-name}/jars"/>
    <property name="jstl-jar" value="${jstl-name}-${jstl-version}.jar"/>

    <import file="../common.xml"/>

    <property name="dt-build" location="${lib-build-dir}/daytrader"/>
    <property name="launcher-build" location="${lib-build-dir}/launcher"/>
    <property name="ger-home" location="${lib-build-dir}/${ger-name}-${ger-version}"/>
    <property name="ger-cli-jar" value="${ger-home}/lib/geronimo-cli-${ger-version}.jar"/>
    <property name="ger-kernel-jar" value="${ger-home}/lib/geronimo-kernel-${ger-version}.jar"/>
    
    <condition property="shell-exe" value="cmd.exe">
        <os family="windows"/>
    </condition>
    <property name="shell-exe" value="sh"/>
    <condition property="gsh-exe" value="gsh.bat">
        <os family="windows"/>
    </condition>
    <property name="gsh-exe" value="gsh"/>
    <condition property="mvn-exe" value="mvn.bat">
        <os family="windows"/>
    </condition>
    <property name="mvn-exe" value="mvn"/>
    
    <target name="url-source" if="ger-url">
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${ger-url}"/>
            <param name="target-file" value="${ger-bin}"/>
        </antcall>
        <antcall target="check-svn-source">
            <param name="svn-url" value="${ger-plugins-url}"/>
            <param name="svn-revision" value="${ger-plugins-revision}"/>
            <param name="target-file" value="${ger-plugins-bin}"/>
            <param name="target-dir" value="${lib-downloads}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${amq-url}"/>
            <param name="target-file" value="${amq-jar}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${jstl-url}"/>
            <param name="target-file" value="${jstl-jar}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${tomcat-url}"/>
            <param name="target-file" value="${tomcat-jar}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${jasper-url}"/>
            <param name="target-file" value="${jasper-jar}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${jasper-el-url}"/>
            <param name="target-file" value="${jasper-el-jar}"/>
        </antcall>
    </target>
    
    <target name="unpack">
        <untar src="${lib-downloads}/${ger-bin}" dest="${lib-build-dir}" compression="gzip"/>
        <untar src="${lib-downloads}/${ger-plugins-bin}" dest="${lib-build-dir}/plugins" compression="gzip"/>
        <patch patchfile="libs/${lib-name}/geronimo-quiet-log.patch" dir="${lib-build-dir}" strip="0" ignorewhitespace="yes"/>
        <chmod dir="${ger-home}/bin" includes="**" perm="u+x"/>
        <mkdir dir="${dt-build}"/>
        <untar src="${lib-downloads}/${lib-src}" dest="${dt-build}/" compression="gzip"/>
        <copy file="${lib-data}/stocks.txt" todir="${dt-build}/modules/ejb/src/main/resources/"/>
        <copy file="${lib-data}/users.txt" todir="${dt-build}/modules/ejb/src/main/resources/"/>
        <copy file="${lib-data}/workload.txt" todir="${dt-build}/modules/ejb/src/main/resources/"/>
        <patch patchfile="libs/${lib-name}/${lib-name}.patch" dir="${dt-build}" strip="0" ignorewhitespace="yes"/>
    </target>
    
    <target name="jar" depends="build">
        <jar destfile="${lib-jars}/${lib-name}.jar">
            <fileset dir="${launcher-build}">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>
    
    <target name="build" depends="build.init,data"> 
        <mkdir dir="${launcher-build}/"/>
        <javac srcdir="${lib-src-dir}" destdir="${launcher-build}" classpath="${ger-cli-jar}:${ger-kernel-jar}" debug="true" debuglevel="lines,vars,source"/>
    </target>
    
    <target name="build.init">
        <property name="mvn-home" location="${toolsdir}/apache-maven-${mvn.version}/bin"/>
        <property name="mvn" location="${mvn-home}/${mvn-exe}"/>
    </target>
   
    <target name="data" depends="build.init">
        <!-- install jstl -->
        <property name="jstl-jar-loc" location="${lib-downloads}/${jstl-jar}"/>
        <exec executable="${mvn}" dir="${dt-build}" failonerror="yes" failifexecutionfails="yes">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <arg value="install:install-file"/>
            <arg value="-DgroupId=jstl"/>
            <arg value="-DartifactId=jstl"/>
            <arg value="-Dversion=${jstl-version}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Dfile=${jstl-jar-loc}"/>
        </exec>

        <!-- install activemq -->
        <property name="amq-jar-loc" location="${lib-downloads}/${amq-jar}"/>
        <exec executable="${mvn}" dir="${dt-build}" failonerror="yes" failifexecutionfails="yes">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <arg value="install:install-file"/>
            <arg value="-DgroupId=org.apache.activemq"/>
            <arg value="-DartifactId=activemq-core"/>
            <arg value="-Dversion=${amq-version}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Dfile=${amq-jar-loc}"/>
        </exec>

        <!-- install jasper -->
        <property name="jasper-jar-loc" location="${lib-downloads}/${jasper-jar}"/>
        <exec executable="${mvn}" dir="${dt-build}" failonerror="yes" failifexecutionfails="yes">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <arg value="install:install-file"/>
            <arg value="-DgroupId=org.apache.tomcat"/>
            <arg value="-DartifactId=${jasper-name}"/>
            <arg value="-Dversion=${jasper-version}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Dfile=${jasper-jar-loc}"/>
        </exec>

        <!-- install jasper-el -->
        <property name="jasper-el-jar-loc" location="${lib-downloads}/${jasper-el-jar}"/>
        <exec executable="${mvn}" dir="${dt-build}" failonerror="yes" failifexecutionfails="yes">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <arg value="install:install-file"/>
            <arg value="-DgroupId=org.apache.tomcat"/>
            <arg value="-DartifactId=${jasper-el-name}"/>
            <arg value="-Dversion=${jasper-el-version}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Dfile=${jasper-el-jar-loc}"/>
        </exec>


        <!-- install tomcat -->
        <property name="tomcat-jar-loc" location="${lib-downloads}/${tomcat-jar}"/>
        <exec executable="${mvn}" dir="${dt-build}" failonerror="yes" failifexecutionfails="yes">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <arg value="install:install-file"/>
            <arg value="-DgroupId=org.apache.tomcat"/>
            <arg value="-DartifactId=${tomcat-version-name}"/>
            <arg value="-Dversion=${tomcat-version}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Dfile=${tomcat-jar-loc}"/>
        </exec>

        <!-- build required plugins -->
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/j2ee" failonerror="yes" failifexecutionfails="yes"/>
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/client" failonerror="yes" failifexecutionfails="yes"/>
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/cxf" failonerror="yes" failifexecutionfails="yes"/>
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/axis" failonerror="yes" failifexecutionfails="yes"/>

        <!-- build daytrader -->
        <exec executable="${mvn}" dir="${dt-build}">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin"/>
            <env key="GERONIMO_HOME" value="${ger-home}"/>
            <!-- <env key="PATH" path="${env.PATH}:${mvn-home}"/> -->
            <env key="JAVA_HOME" path="${java.home}"/>
            <env key="MAVEN_OPTS" value="-Xms256m -Xmx512m"/>
            <arg value="clean"/>
            <arg value="install"/>
        </exec>
        
        <!-- deploy daytrader to geronimo -->
        <antcall target="start-geronimo"/>
        
        <antcall target="undeploy">
            <param name="deploy-subject" value="unavailable-client-deployer"/>
        </antcall>
        <antcall target="undeploy">
            <param name="deploy-subject" value="unavailable-ejb-deployer"/>
        </antcall>
        <antcall target="undeploy">
            <param name="deploy-subject" value="unavailable-webservices-deployer"/>
        </antcall>

        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/client/client/target/client-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/client/client-deployer/target/client-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/client/client-security/target/client-security-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/cxf/cxf/target/cxf-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/cxf/cxf-deployer/target/cxf-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/cxf/cxf-ejb/target/cxf-ejb-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/cxf/cxf-ejb-deployer/target/cxf-ejb-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/axis/axis/target/axis-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${lib-build-dir}/plugins/j2ee/jsr88-jar-configurer/target/jsr88-jar-configurer-${ger-version}.car"/>
        </antcall>

        <!-- daytrader -->
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/daytrader-derby-datasource/target/daytrader-derby-datasource-2.2-SNAPSHOT.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/daytrader-jetty/target/daytrader-jetty-2.2-SNAPSHOT.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/daytrader-jetty/target/daytrader-dacapo-2.2-SNAPSHOT.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/daytrader-jetty/target/daytrader-ws-client-2.2-SNAPSHOT.car"/>
        </antcall>
        <antcall target="stop-geronimo"/>
        
        <!-- hack to get geronimo to correctly load RMIClassLoaderSpiImpl
             which it only seems to load from the jar that dacapo is contained in -->
        <unjar src="${lib-build-dir}/${ger-name}-${ger-version}/lib/geronimo-kernel-${ger-version}.jar" dest="${bm-output-dir}">
            <patternset>
                <include name="**org/apache/geronimo/kernel/rmi/RMIClassLoaderSpiImpl.class"/>
            </patternset>
        </unjar>

        <!-- package the resulting geronimo install as a zip -->
        <zip destfile="${lib-dat}/${lib-name}.zip">
            <fileset dir="${lib-build-dir}" includes="${ger-name}-${ger-version}/**"/>
        </zip>
    </target>
    
    <target name="start-geronimo">
        <echo message="${ger-home}/bin/${gsh-exe}"/>
        <exec executable="${ger-home}/bin/${gsh-exe}" dir="${ger-home}" spawn="true">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
               <arg value="-c"/>
               <arg value="geronimo/start-server"/>
        </exec>
        <echo message="Waiting for geronimo startup..."/>
        <waitfor maxwait="2" maxwaitunit="minute" checkevery="1000">
                <http url="http://localhost:8080/console/login.jsp"/>
        </waitfor>
        <echo message="Established connection..."/>
        <sleep seconds="1"/>
    </target>
    <target name="stop-geronimo">
        <exec executable="${ger-home}/bin/${gsh-exe}" dir="${ger-home}" spawn="false">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
               <arg value="-c"/>
               <arg value="geronimo/stop-server -u system -w manager"/>
        </exec>
    </target>
    <target name="deploy">
        <exec executable="${ger-home}/bin/${gsh-exe}">
             <env key="GERONIMO_HOME" path="${ger-home}"/>
               <arg value="-c"/>
               <arg value="deploy/install-plugin -u system -w manager ${deploy-subject}"/>
        </exec>
    </target>
    <target name="undeploy">
        <exec executable="${ger-home}/bin/${gsh-exe}">
             <env key="GERONIMO_HOME" path="${ger-home}"/>
               <arg value="-c"/>
               <arg value="deploy/undeploy -u system -w manager ${deploy-subject}"/>
        </exec>
    </target>
</project>
